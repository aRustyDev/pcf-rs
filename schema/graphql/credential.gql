# TODO: Add Credential (FIDO/WebAuthn)
# TODO: Add Credential (AWS Access Keys (access_key_id + secret_access_key))
# TODO: Add Credential (Azure Service Principals)
# TODO: Add Credential (Google Cloud IAM JSON Key)
# TODO: Add Credential (Kubernetes Kubeconfig)
# TODO: Add Credential (Docker Credentials (for registry auth))
# TODO: Add Credential (Hashed Fingerprint Templates (not raw images))
# TODO: Add Credential (Face Recognition Templates)
# TODO: Add Credential (Symmetric Keys (AES keys, etc.))
# TODO: Add Credential (Key Encryption Keys (KEK))
# TODO: Add Credential (Secrets Management Service Keys (e.g., Vault, AWS KMS))
# TODO: Add Credential (OAUTH Token)
# TODO: Add Credential (OTHER)
# TODO: Add "scope" key
# TODO: Add "last_used_at" key
# TODO: Add "usage_count" key
# TODO: Add "rotation_policy" key

interface Credential implements Node & Auditable {
    name: String!
    expires: DateTime
    isShared: Boolean!
    authenticates: Service! # or Identifier!
    usedFor: Domain!
    usedBy: Account!

    # Implementations
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    createdBy: Person!
    updatedBy: Person!
}

enum OtpType {
    HOTP
    "used to generate OTPs"
    TOTP "incremental OTPs"
}

enum KeyPurpose {
    SIGNING
    ENCRYPTION
}

type SshCredential implements Credential {
    publicKey: String!
    privateKey: String!
    keyType: String!
    password: String
    purpose: KeyPurpose

    # Implementations
    name: String!
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    createdBy: Person!
    updatedBy: Person!
}

type GpgCredential implements Credential {
    publicKey: String!
    privateKey: String!
    keyType: String!
    password: String

    # Implementations
    name: String!
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    createdBy: Person!
    updatedBy: Person!
}

type TokenCredential implements Credential {
    secret: String!

    # Implementations
    name: String!
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    createdBy: Person!
    updatedBy: Person!
}

type OtpCredential implements Credential {
    secret: String!

    # Implementations
    name: String!
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    createdBy: Person!
    updatedBy: Person!
}

type JwtCredential implements Credential {
    secret: String!

    # Implementations
    name: String!
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    createdBy: Person!
    updatedBy: Person!
}

type X509Credential implements Credential {
    secret: String!

    # Implementations
    name: String!
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    createdBy: Person!
    updatedBy: Person!
}

type PgpCredential implements Credential {
    secret: String!

    # Implementations
    name: String!
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    createdBy: Person!
    updatedBy: Person!
}

type RecoveryCodeCredential implements Credential {
    secret: String!

    # Implementations
    name: String!
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    createdBy: Person!
    updatedBy: Person!
}

type SecurityQuestionCredential implements Credential {
    secret: String!

    # Implementations
    name: String!
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    createdBy: Person!
    updatedBy: Person!
}

type AwsCredential implements Credential {
    secret: String!

    # Implementations
    name: String!
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    createdBy: Person!
    updatedBy: Person!
}

type PkcsCredential implements Credential {
    secret: String!

    # Implementations
    name: String!
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    createdBy: Person!
    updatedBy: Person!
}
